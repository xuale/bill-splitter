{"version":3,"sources":["logo.svg","backend/db.js","backend/services/base.js","backend/services/users.js","containers/login.js","backend/services/payments.js","backend/services/friends.js","containers/create.js","containers/pay.js","containers/camera.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","settings","timestampsInSnapshots","ts","database","ServerValue","TIMESTAMP","Base","path","Object","classCallCheck","this","ref","collection","data","_this","Promise","resolve","reject","add","then","doc","id","catch","err","_this2","get","_this3","docs","params","_this4","field","operator","value","where","firstParam","secondParam","_this5","firstField","firstOperator","firstValue","secondField","secondOperator","secondValue","change","update","_this6","delete","users","UserService","arguments","length","undefined","possibleConstructorReturn","getPrototypeOf","call","firstName","lastName","newUser","email","password","isLoggedIn","create","user","compoundQuery","snap","error","userId","Login","props","state","isNewAccount","switchLoginRegister","bind","assertThisInitialized","register","login","setState","saveLoginLocally","localStorage","setItem","enterCreate","console","log","history","push","react_default","a","createElement","row","style","marginTop","col","span","offset","es_card","title","input","placeholder","onInput","linkState","margin","type","es_button","onClick","Component","payments","PaymentMethodService","method","query","cards","forEach","services_friends","FriendService","userParams","userService","empty","friend","f","friendId","getById","all","read","values","allUsers","allFriends","friends","foundFriends","obj","find","Create","getItem","addCard","addFriend","currCard","selectedFriends","cardNumber","friendID","enterPayScreen","toggleCardModal","toggleFriendModal","truncateNumber","postCardNumber","getCards","getFriends","selectCard","selectFriend","getAll","selected","i","idx","newSelected","num","toString","slice","_this$state4","modal","visible","okText","onOk","onCancel","map","card","key","icon","fontSize","display","friendStyle","Pay","location","total","isCompleted","clickForPayment","getName","_this$state","textAlign","Header","Layout","Content","Footer","App","loggedIn","logout","clear","BrowserRouter","className","layout","Link","to","padding","height","Route","exact","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76d72c76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyDZjFuL-G_kTkrQR8qFt0UyxaSIO9Wb0oI',\n  authDomain: 'splitio-6c3eb.firebaseapp.com',\n  databaseURL: 'https://splitio-6c3eb.firebaseio.com',\n  projectId: 'splitio-6c3eb',\n  storageBucket: 'splitio-6c3eb.appspot.com',\n  messagingSenderId: '924837398418'\n};\n\nfirebase.initializeApp(config);\n\nconst db = firebase.firestore();\n\nconst settings = { timestampsInSnapshots: true };\ndb.settings(settings);\n\nconst ts = firebase.database.ServerValue.TIMESTAMP;\n\nexport { db, ts };\n","import { db, ts } from '../db';\n\nclass Base {\n  constructor(path) {\n    this.db = db;\n    this.ref = this.db.collection(path);\n  }\n\n  create(data) {\n    data['createdAt'] = ts;\n    return new Promise((resolve, reject) => {\n      this.ref\n        .add(data)\n        .then(doc => {\n          resolve(doc.id);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  getById(id) {\n    return new Promise((resolve, reject) => {\n      this.ref\n        .doc(id)\n        .get()\n        .then(doc => {\n          resolve(doc);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  read() {\n    return new Promise((resolve, reject) => {\n      this.ref\n        .get()\n        .then(docs => {\n          resolve(docs);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  query(params) {\n    const { field, operator, value } = params;\n    return new Promise((resolve, reject) => {\n      this.ref\n        .where(field, operator, value)\n        .get()\n        .then(docs => {\n          resolve(docs);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  compoundQuery(firstParam, secondParam) {\n    const { firstField, firstOperator, firstValue } = firstParam;\n    const { secondField, secondOperator, secondValue } = secondParam;\n    return new Promise((resolve, reject) => {\n      this.ref\n        .where(firstField, firstOperator, firstValue)\n        .where(secondField, secondOperator, secondValue)\n        .get()\n        .then(docs => {\n          return resolve(docs);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  update(id, change) {\n    const ref = this.ref.doc(id);\n    return new Promise((resolve, reject) => {\n      ref\n        .update(change)\n        .then(doc => {\n          resolve(doc);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  delete(id) {\n    return new Promise((resolve, reject) => {\n      this.ref\n        .doc(id)\n        .delete()\n        .then(doc => {\n          resolve(doc);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n}\n\nexport default Base;\n","import Base from './base';\nimport { ts } from '../db';\n\nclass UserService extends Base {\n  constructor(path = 'users') {\n    super(path);\n  }\n\n  register(data) {\n    const { firstName, lastName, email, password } = data;\n\n    const newUser = {\n      email,\n      firstName,\n      lastName,\n      password,\n      isLoggedIn: true\n    };\n\n    return new Promise((resolve, reject) => {\n      this.create(newUser)\n        .then(id => {\n          const user = newUser;\n          user.id = id;\n          resolve(user);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  login(data) {\n    return new Promise((resolve, reject) => {\n      const { email, password } = data;\n\n      const firstParam = {\n        firstField: 'email',\n        firstOperator: '==',\n        firstValue: email\n      };\n      const secondParam = {\n        secondField: 'password',\n        secondOperator: '==',\n        secondValue: password\n      };\n\n      this.compoundQuery(firstParam, secondParam)\n        .then(snap => {\n          if (snap.docs.length !== 1) {\n            return reject({ error: 'no value user' });\n          }\n\n          const userId = snap.docs[0].id;\n\n          this.update(userId, { isLoggedIn: true })\n            .then(user => {\n              const newUser = data;\n              newUser.id = userId;\n              return resolve(newUser);\n            })\n            .catch(err => {\n              return reject(err);\n            });\n        })\n        .catch(err => {\n          return resolve(err);\n        });\n    });\n  }\n\n  logout(id) {\n    // set localStorage.clear(); on component\n    const change = { isLoggedIn: false };\n    return this.update(id, change);\n  }\n}\n\nexport default new UserService();\n","import React, { Component } from 'react';\nimport linkState from 'linkstate';\nimport { Button, Row, Card, Col, Input } from 'antd';\n\nimport UserService from '../backend/services/users';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n      isNewAccount: false\n    };\n\n    this.switchLoginRegister = this.switchLoginRegister.bind(this);\n    this.register = this.register.bind(this);\n    this.login = this.login.bind(this);\n  }\n\n  switchLoginRegister() {\n    const { isNewAccount } = this.state;\n    this.setState({\n      isNewAccount: !isNewAccount\n    });\n  }\n\n  async register() {\n    await UserService.register(this.state);\n    await this.login();\n  }\n\n  async login() {\n    const user = await UserService.login(this.state);\n    this.saveLoginLocally(user);\n  }\n\n  saveLoginLocally(user) {\n    const { id, firstName, lastName } = user;\n\n    localStorage.setItem('isLoggedIn', 'true');\n    localStorage.setItem('id', id);\n    localStorage.setItem('firstName', firstName);\n    localStorage.setItem('lastName', lastName);\n\n    this.enterCreate();\n  }\n\n  enterCreate() {\n    console.log('redirecting');\n    this.props.history.push('/create');\n  }\n\n  render() {\n    const { isNewAccount } = this.state;\n    return (\n      <Row style={{ marginTop: '4rem' }}>\n        <Col span={8} offset={8}>\n          {isNewAccount && (\n            <Card title=\"Register\">\n              <Input\n                placeholder=\"First Name\"\n                onInput={linkState(this, 'firstName')}\n                style={{ margin: '8px' }}\n              />\n              <Input\n                placeholder=\"Last Name\"\n                onInput={linkState(this, 'lastName')}\n                style={{ margin: '8px' }}\n              />\n              <Input\n                placeholder=\"Email\"\n                onInput={linkState(this, 'email')}\n                style={{ margin: '8px' }}\n              />\n              <Input\n                placeholder=\"Password\"\n                type=\"password\"\n                onInput={linkState(this, 'password')}\n                style={{ margin: '8px' }}\n              />\n              <Input\n                placeholder=\"Confirm Password\"\n                type=\"password\"\n                style={{ margin: '8px' }}\n              />\n              <Button\n                type=\"primary\"\n                onClick={this.register}\n                style={{ margin: '8px' }}\n              >\n                Create Account\n              </Button>\n\n              <p style={{ margin: '8px' }}>\n                Already have an account?{' '}\n                <a onClick={this.switchLoginRegister}>Click here to login. </a>\n              </p>\n            </Card>\n          )}\n          {!isNewAccount && (\n            <Card title=\"Login\">\n              <Input\n                placeholder=\"Email\"\n                onInput={linkState(this, 'email')}\n                style={{ margin: '8px' }}\n              />\n              <Input\n                placeholder=\"Password\"\n                type=\"password\"\n                onInput={linkState(this, 'password')}\n                style={{ margin: '8px' }}\n              />\n              <Button\n                type=\"primary\"\n                onClick={this.login}\n                style={{ margin: '8px' }}\n              >\n                Login\n              </Button>\n              <p style={{ margin: '8px' }}>\n                Don't have an account?{' '}\n                <a onClick={this.switchLoginRegister}>\n                  Click here to register.\n                </a>\n              </p>\n            </Card>\n          )}\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default Login;\n","import Base from './base';\n\nclass PaymentMethodService extends Base {\n  constructor(path = 'payments') {\n    super(path);\n  }\n\n  add(method) {\n    return this.create(method);\n  }\n\n  getAll(userId) {\n    // return this.getById(userId);\n    return new Promise((resolve, reject) => {\n      const params = {\n        field: 'id',\n        operator: '==',\n        value: userId\n      };\n      this.query(params)\n        .then(docs => {\n          let cards = [];\n          docs.forEach(doc => {\n            cards.push(doc.data());\n          });\n          resolve(cards);\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  remove(id) {\n    return this.delete(id);\n  }\n}\n\nexport default new PaymentMethodService();\n","import Base from './base';\nimport userService from './users';\n\nclass FriendService extends Base {\n  constructor(path = 'friends') {\n    super(path);\n  }\n\n  add(userId, email) {\n    return new Promise((resolve, reject) => {\n      const userParams = {\n        field: 'email',\n        operator: '==',\n        value: email\n      };\n\n      userService\n        .query(userParams)\n        .then(user => {\n          if (user.empty) {\n            return reject('user does not exist');\n          }\n          let friend = [];\n          user.forEach(doc => {\n            const f = doc.data();\n            f.id = doc.id;\n            friend.push(f);\n          });\n\n          const friendId = friend[0].id;\n          this.create({\n            userId,\n            friendId\n          })\n            .then(id => {\n              resolve(id);\n            })\n            .catch(err => {\n              reject(err);\n            });\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  getById(id) {\n    return this.getById(id);\n  }\n\n  getAll(userId) {\n    const params = {\n      field: 'userId',\n      operator: '==',\n      value: userId\n    };\n\n    return new Promise((resolve, reject) => {\n      Promise.all([userService.read(), this.query(params)])\n        .then(values => {\n          const allUsers = values[0];\n          const allFriends = values[1];\n\n          let users = [];\n          allUsers.forEach(doc => {\n            const f = doc.data();\n            f.id = doc.id;\n            users.push(f);\n          });\n\n          let friends = [];\n          allFriends.forEach(doc => {\n            const f = doc.data();\n            f.id = doc.id;\n            friends.push(f);\n          });\n\n          let foundFriends = [];\n          users.forEach(function(obj) {\n            const friend = friends.find(f => f.friendId === obj.id);\n            if (obj && friend) {\n              foundFriends.push(obj);\n            }\n          });\n\n          resolve(foundFriends);\n        })\n        .catch(err => {\n          return reject(err);\n        });\n    });\n  }\n\n  delete(id) {\n    return this.delete(id);\n  }\n}\n\nexport default new FriendService();\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button, Row, Card, Col, Input, Icon, Modal } from 'antd';\nimport linkState from 'linkstate';\n\nimport PaymentMethodService from '../backend/services/payments';\nimport FriendService from '../backend/services/friends';\n\nclass Create extends Component {\n  constructor(props) {\n    super(props);\n    const id = localStorage.getItem('id');\n    console.log(id);\n\n    this.state = {\n      addCard: false,\n      addFriend: false,\n      currCard: 0,\n      cards: [],\n      friends: [],\n      selectedFriends: [0, 0, 0, 0], // bitmap representing whether or not friend i  selected\n      id,\n      cardNumber: '',\n      friendID: ''\n    };\n\n    this.enterPayScreen = this.enterPayScreen.bind(this);\n    this.toggleCardModal = this.toggleCardModal.bind(this);\n    this.toggleFriendModal = this.toggleFriendModal.bind(this);\n    this.truncateNumber = this.truncateNumber.bind(this);\n    this.postCardNumber = this.postCardNumber.bind(this);\n    this.addFriend = this.addFriend.bind(this);\n\n    this.getCards = this.getCards.bind(this);\n    this.getFriends = this.getFriends.bind(this);\n\n    this.selectCard = this.selectCard.bind(this);\n    this.selectFriend = this.selectFriend.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCards();\n    this.getFriends();\n  }\n\n  async getCards() {\n    const { id } = this.state;\n    const cards = await PaymentMethodService.getAll(id);\n    this.setState({ cards });\n  }\n\n  async getFriends() {\n    const { id } = this.state;\n    const friends = await FriendService.getAll(id);\n    const selectedFriends = [];\n    friends.forEach(() => {\n      selectedFriends.push(false);\n    });\n    this.setState({ friends });\n  }\n\n  async enterPayScreen() {\n    const { selectedFriends, friends } = this.state;\n    const selected = [];\n    selectedFriends.forEach((friend, i) => {\n      if (friend) {\n        selected.push(friends[i]);\n      }\n    });\n\n    this.props.history.push('/pay', { friends: selected });\n  }\n\n  async postCardNumber() {\n    const { cardNumber, id } = this.state;\n    await PaymentMethodService.add({ cardNumber, id });\n    this.getCards();\n  }\n\n  async addFriend() {\n    const { id, friendID } = this.state;\n    await FriendService.add(id, friendID);\n    this.getFriends();\n  }\n\n  toggleCardModal() {\n    const { addCard } = this.state;\n    this.setState({ addCard: !addCard });\n  }\n\n  toggleFriendModal() {\n    const { addFriend } = this.state;\n    this.setState({ addFriend: !addFriend });\n  }\n\n  selectCard(idx) {\n    // Only one can be selected at a time\n    this.setState({\n      currCard: 4 * idx\n    });\n  }\n\n  selectFriend(idx) {\n    // Flips bitmap\n    const { selectedFriends } = this.state;\n    let newSelected = selectedFriends;\n    newSelected[idx] = !selectedFriends[idx];\n\n    this.setState({ selectedFriends: newSelected });\n  }\n\n  truncateNumber(num) {\n    const tokens = num.toString();\n    return tokens.slice(12, 17);\n  }\n\n  render() {\n    const {\n      friends,\n      cards,\n      selectedFriends,\n      addCard,\n      addFriend,\n      currCard\n    } = this.state;\n    const { truncateNumber, selectCard, selectFriend } = this;\n    return (\n      <div>\n        <Modal\n          title=\"Enter card information\"\n          visible={addCard}\n          okText=\"Add card\"\n          onOk={this.postCardNumber}\n          onCancel={this.toggleCardModal}\n        >\n          <Input\n            placeholder=\"Card number\"\n            onInput={linkState(this, 'cardNumber')}\n            style={{ margin: '8px' }}\n          />\n          <Input\n            placeholder=\"Expiration date (MM/YY)\"\n            style={{ margin: '8px' }}\n          />\n          <Input placeholder=\"Name on card\" style={{ margin: '8px' }} />\n          <Input placeholder=\"CVC\" type=\"password\" style={{ margin: '8px' }} />\n        </Modal>\n        <Modal\n          title=\"Search for a friend\"\n          visible={addFriend}\n          okText=\"Add friend\"\n          onOk={this.addFriend}\n          onCancel={this.toggleFriendModal}\n        >\n          <Input\n            placeholder=\"Friend email\"\n            onInput={linkState(this, 'friendID')}\n            style={{ margin: '8px' }}\n          />\n        </Modal>\n\n        <Row style={{ marginTop: '4rem' }}>\n          <Col span={10} offset={7}>\n            <Card title=\"Create transaction\">\n              <Card type=\"inner\" title=\"Change Payment?\">\n                <Row>\n                  {cards.map(function(card, i) {\n                    if (i < 5) {\n                      return (\n                        <Col span={4} key={i}>\n                          <a onClick={() => selectCard(i)}>\n                            <Icon\n                              type=\"credit-card\"\n                              style={{ fontSize: '32px', display: 'block' }}\n                            />\n                            {truncateNumber(card.cardNumber)}\n                          </a>\n                        </Col>\n                      );\n                    }\n                  })}\n                  <Col span={4}>\n                    <a onClick={this.toggleCardModal}>\n                      <Icon type=\"plus\" />\n                    </a>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col span={4} offset={currCard}>\n                    <Icon type=\"caret-up\" />\n                  </Col>\n                </Row>\n              </Card>\n              <Card\n                style={{ marginTop: 16 }}\n                type=\"inner\"\n                title=\"Choose Friends\"\n              >\n                <Row>\n                  {friends.map(function(friend, i) {\n                    let friendStyle = { fontSize: '32px', display: 'block' };\n                    if (selectedFriends[i]) {\n                      friendStyle['color'] = 'lightgreen';\n                    }\n                    if (i < 5) {\n                      return (\n                        <Col span={4}>\n                          <a onClick={() => selectFriend(i)}>\n                            <Icon type=\"user\" style={friendStyle} />\n                            {friend.firstName} {friend.lastName}\n                          </a>\n                        </Col>\n                      );\n                    }\n                  })}\n                  <Col span={4}>\n                    <a onClick={this.toggleFriendModal}>\n                      <Icon type=\"plus\" />\n                    </a>\n                  </Col>\n                </Row>\n              </Card>\n              <Button\n                type=\"primary\"\n                style={{ marginTop: 16 }}\n                onClick={this.enterPayScreen}\n              >\n                Start Transaction\n              </Button>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Create;\n","import React, { Component } from 'react';\nimport linkState from 'linkstate';\nimport { Button, Row, Card, Col, Input } from 'antd';\n\nimport UserService from '../backend/services/users';\nimport { timingSafeEqual } from 'crypto';\n\nclass Pay extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: {\n        state: { friends }\n      }\n    } = this.props;\n    this.state = {\n      friends,\n      total: [],\n      firstName: 'Anshul',\n      lastName: 'Aggarwal',\n      isCompleted: false\n    };\n    this.clickForPayment = this.clickForPayment.bind(this);\n    this.getName = this.getName.bind(this);\n  }\n\n  componentDidMount() {\n    const firstName = localStorage.getItem('firstName');\n    const lastName = localStorage.getItem('lastName');\n    this.setState({\n      firstName,\n      lastName\n    });\n  }\n\n  clickForPayment() {\n    const { isCompleted } = this.state;\n    this.setState({\n      isCompleted: !isCompleted\n    });\n  }\n\n  getName() {\n    return this.state.firstName + ' ' + this.state.lastName;\n  }\n\n  render() {\n    const { friends, total, firstName, lastName, isCompleted } = this.state;\n    return (\n      <Row style={{ marginTop: '4rem' }}>\n        <Col span={8} offset={8}>\n          {isCompleted && (\n            <Card>\n              <p>Success</p>\n              <p>\n                <Button\n                  type=\"primary\"\n                  onClick={this.clickForPayment}\n                  style={{ margin: '8px' }}\n                >\n                  Send Payments\n                </Button>\n              </p>\n            </Card>\n          )}\n          {!isCompleted && (\n            <Card title=\"Pay\">\n              <p style={{ margin: '12px', textAlign: 'left' }}>\n                Receipt: {this.getName()}\n              </p>\n              <Col>\n                {friends.map(function(friend, i) {\n                  const { id } = friend;\n                  return (\n                    <Row>\n                      <Col span={12}>{id}</Col>{' '}\n                      <Col span={12}>\n                        <Input\n                          placeholder=\"Enter Value To Pay\"\n                          style={{ margin: '12px', display: 'inline' }}\n                        />\n                      </Col>\n                    </Row>\n                  );\n                })}\n              </Col>\n              <Row>\n                <Col span={4} offset={4}>\n                  <Button\n                    type=\"primary\"\n                    onClick={this.clickForPayment}\n                    style={{ margin: '8px' }}\n                  >\n                    Send Payments\n                  </Button>\n                </Col>\n                <Col span={8} offset={4}>\n                  <Button\n                    onClick={() => {\n                      this.props.history.push('/create');\n                    }}\n                    style={{ margin: '8px' }}\n                  >\n                    Cancel\n                  </Button>\n                </Col>\n              </Row>\n            </Card>\n          )}\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default Pay;\n","import React, { Component } from 'react';\n\nclass Camera extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (<div></div>);\n  }\n}\n\n\nexport default Camera;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { Button, Row, Col, Layout, Menu } from 'antd';\n\nimport Login from './containers/login';\nimport Create from './containers/create';\nimport Camera from './containers/camera';\nimport Pay from './containers/pay';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport UserService from './backend/services/users';\n\nconst { Header, Content, Footer } = Layout;\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst loggedIn = localStorage.getItem('isLoggedIn') == 'true';\n\n\t\tthis.state = {\n\t\t\tloggedIn\n    };\n    \n    this.logout = this.logout.bind(this);\n\t}\n\n\tlogout() {\n\t\tconst id = localStorage.getItem('id');\n\t\tUserService.logout(id);\n    localStorage.clear();\n    const loggedIn = localStorage.getItem('isLoggedIn') == 'true';\n\t\tthis.setState({\n\t\t\tloggedIn\n    });\n\t}\n\n\trender() {\n\t\tconst { loggedIn } = this.state;\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Layout className=\"layout\">\n\t\t\t\t\t\t<Header>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col span={8} offset={8}>\n\t\t\t\t\t\t\t\t\t<h1 className=\"App-logo\">\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/\">Split.io</Link>\n\t\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col span={4} offset={4}>\n\t\t\t\t\t\t\t\t\t{loggedIn && (\n\t\t\t\t\t\t\t\t\t\t<Button type=\"danger\" onClick={this.logout}>\n\t\t\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t<Content style={{ padding: '20px 50px', height: '85vh' }}>\n\t\t\t\t\t\t\t<Route path=\"/\" exact component={Login} />\n\t\t\t\t\t\t\t<Route path=\"/create/\" component={Create} />\n\t\t\t\t\t\t\t<Route path=\"/pay/\" component={Pay} />\n\t\t\t\t\t\t</Content>\n\t\t\t\t\t\t<Footer style={{ textAlign: 'center' }}>Made with 💜at UCLA</Footer>\n\t\t\t\t\t</Layout>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}